// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.180.0
//   protoc               v5.27.1
// source: movie.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "movie";

export interface SearchMovieByNameRequest {
  name: string;
}

export interface SearchMovieByNameResponse {
  movie: Movie[];
}

export interface Movie {
  id: string;
  title: string;
  overview: string;
  releaseDate: string;
  posterPath: string;
  backdropPath: string;
  popularity: number;
}

export const MOVIE_PACKAGE_NAME = "movie";

export interface MovieServiceClient {
  searchMovieByName(request: SearchMovieByNameRequest): Observable<SearchMovieByNameResponse>;
}

export interface MovieServiceController {
  searchMovieByName(
    request: SearchMovieByNameRequest,
  ): Promise<SearchMovieByNameResponse> | Observable<SearchMovieByNameResponse> | SearchMovieByNameResponse;
}

export function MovieServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["searchMovieByName"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("MovieService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("MovieService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const MOVIE_SERVICE_NAME = "MovieService";
